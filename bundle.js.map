{"version":3,"sources":["webpack:///webpack/bootstrap d47acb373eb336c77984","webpack:///./lib/draw.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d47acb373eb336c77984","let canvas = document.getElementById('myCanvas');\r\nlet ctx = canvas.getContext('2d');\r\nlet paint = false;\r\n\r\nlet prevX = 0,\r\n  currX = 0,\r\n  prevY = 0,\r\n  currY = 0,\r\n  dot_paint = false;\r\n\r\nlet lineColor = 'black',\r\n  brushSize = 5;\r\n\r\nfunction init() {\r\n  canvas.addEventListener('mousemove', (event) => {\r\n    draw('move', event);\r\n  }, false);\r\n  canvas.addEventListener('mousedown', (event) => {\r\n    draw('down', event);\r\n  }, false);\r\n  canvas.addEventListener('mouseup', (event) => {\r\n    draw('up', event);\r\n  }, false);\r\n  canvas.addEventListener('mouseout', (event) => {\r\n    draw('out ', event);\r\n  }, false);\r\n\r\n}\r\n\r\n\r\n\r\nfunction color(colorString) {\r\n  switch (colorString) {\r\n  case 'black':\r\n    lineColor = 'black';\r\n    break;\r\n  case 'red':\r\n    lineColor = 'red';\r\n    break;\r\n  case 'orange':\r\n    lineColor = 'orange';\r\n    break;\r\n  case 'yellow':\r\n    lineColor = 'yellow';\r\n    break;\r\n  case 'green':\r\n    lineColor = 'green';\r\n    break;\r\n  case 'blue':\r\n    lineColor = 'blue';\r\n    break;\r\n  case 'purple':\r\n    lineColor = 'purple';\r\n    break;\r\n  case 'white':\r\n    lineColor = 'white';\r\n    break;\r\n  default:\r\n    lineColor = 'black';\r\n    break;\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction fill(event) {\r\n  let dx = currX - prevX;\r\n  let dy = currY - prevY;\r\n\r\n  let signX = (dx === 0 ? 0 : dx/Math.abs(dx));\r\n  let signY = (dy === 0 ? 0 : dy/Math.abs(dy));\r\n  let growth = (Math.abs(dx) > Math.abs(dy) ? Math.abs(dx) : Math.abs(dy));\r\n  let restraint = (Math.abs(dx) > Math.abs(dy) ? Math.abs(dy) : Math.abs(dx));\r\n  let greater = (growth === Math.abs(dx) ? 'x' : 'y');\r\n  let slope = (growth / (restraint === 0 ? 1 : restraint));\r\n\r\n  let drawX = prevX;\r\n  let drawY = prevY;\r\n  let moveX = prevX;\r\n  let moveY = prevY;\r\n  for (var i = 0; i < growth; i++) {\r\n    if (greater === 'x') {\r\n      moveY += signY / slope;\r\n      drawY = Math.floor(moveY);\r\n      drawX += signX;\r\n    } else {\r\n      moveX += signX / slope;\r\n      drawX = Math.floor(moveX);\r\n      drawY += signY;\r\n    }\r\n\r\n    draw('fill', event, drawX, drawY);\r\n  }\r\n\r\n}\r\n\r\n// function erase() {\r\n//   let message = confirm('Want to clear?');\r\n//   if (message) {\r\n//     ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n//   }\r\n// }\r\n\r\nfunction draw(res, event, drawX, drawY) {\r\n  if (res == 'down') {\r\n    prevX = currX;\r\n    prevY = currY;\r\n    currX = event.clientX - canvas.offsetLeft;\r\n    currY = event.clientY - canvas.offsetTop;\r\n\r\n    paint = true;\r\n    dot_paint = true;\r\n\r\n    if (event.button == 0) {\r\n      lineColor = 'black';\r\n      brushSize = 5;\r\n    }\r\n\r\n    if (event.button == 2) {\r\n      lineColor = 'white';\r\n      brushSize = 24;\r\n    }\r\n    if (dot_paint) {\r\n      ctx.beginPath();\r\n      ctx.fillStyle = lineColor;\r\n      ctx.arc(currX, currY, brushSize, 0, Math.PI*2);\r\n      ctx.fill();\r\n      ctx.closePath();\r\n      dot_paint = false;\r\n    }\r\n  }\r\n  if (res == 'up' || res == 'out') {\r\n    paint = false;\r\n  }\r\n  if (res == 'move') {\r\n    if (paint) {\r\n      prevX = currX;\r\n      prevY = currY;\r\n      currX = event.clientX - canvas.offsetLeft;\r\n      currY = event.clientY - canvas.offsetTop;\r\n      fill(event);\r\n    }\r\n  }\r\n  if (res == 'fill') {\r\n    ctx.beginPath();\r\n    ctx.fillStyle = lineColor;\r\n    ctx.arc(drawX, drawY, brushSize, 0, Math.PI*2);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n}\r\n\r\ninit();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/draw.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}